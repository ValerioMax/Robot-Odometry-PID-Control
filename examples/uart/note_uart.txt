---------------  MYUBRR  ---------------

MYUBRR: USART Baud Rate Register 
è il valore contenente un fattore del prescaler del clock di arduino
per quando invierà/riceverà i bit sulla seriale.
Questo valore può essere anche abbastanza grande da non entrare nei registri 8 bit di arduino 
quindi lo si spezza nei due registri 8 bit: UBRR0H, UBRR0L

Arduino invia/riceve sulla seriale con frequenza uguale a:
    FCPU / (16 * (MYUBRR + 1))

[Il prescaler è dato da un fattore costante 16 e da MYUBRR + 1]

Per calcolare MYUBRR si possono usare due formule
    MYUBRR = (FCPU / (16 * BAUD)) - 1
    MYUBRR = (FCPU / (16 * BAUD)) - 0.5 = ((F_CPU + BAUD * 8) / (BAUD * 16)) - 1
La seconda è più precisa perché rounda all'intero più vicino -1 mentre la prima rounda all'intero più basso -1

Es:
FCPU = 16000000
BAUD = 115200

1)  Con la prima formula:
        MYUBRR = 8.68 - 1 = 7.68 -> 7   (in generale un intero viene roundato all'intero più basso)
    e quindi:
        FCPU / (16 * (MYUBRR + 1)) = 125000 bit/s

2)  Con la seconda formula:
        MYUBRR = 8.68 - 0.5 = 8.18 -> 8
    e quindi:
        FCPU / (16 * (MYUBRR + 1)) = 111111 bit/s

Con la prima il bitrate effettivo è del 8.5% maggiore
    125000/115200 = 1.085
Con la prima il bitrate effettivo è del 3.6% inferiore
    111111/115200 = 0.964

C'è una differenza di biterate minore nel secondo caso, che quindi è più preciso



---------------  UDR0  ---------------

UDR0 è un registro dove viene depositato il carettere che si vuole scrivere SULLA seriale o che si vuole leggere DALLA seriale
E' un'interfaccia usata sia per trasmettere che per ricevere un carattere (anche se i buffer sono separati)

Ci sono due buffer:
    - buffer di trasmissione il cui stato è indicato dal bit UDRE0 nel registro UCSR0A
        --> in genere si aspetta che tale bit sia a 1 
            ovvero il transmit buffer è vuoto e l'arduino può procedere 
            a scrivere un carattere sulla seriale con UDR0 = c;
    - buffer di ricezione il cui stato è indicato dal bit RXC0 nel registro UCSR0A
        --> in genere si aspetta che tale bit sia a 1 
            ovvero il receive buffer si è riempito del tutto dei del carattere in arrivo
            e quindi l'arduino può procedere a leggerlo correttamente con c = UDR0;

Il contenuto di UDR0 è particolare:
Se si scrive su di lui, l'HW farà in modo che il contenuto venga scritto sul buffer di trasmissione
Se si legge da lui, l'HW farà in modo che si legga il contenuto dal buffer di ricezione

Es:
Trasmit buffer è vuoto, ma il Receive buffer è pieno e contiene il char 'a'
Scrivo un char UDR0 = 'b'
Quando andrò a leggere da UDR0 otterrò 'a'

[Scrivere qualcosa non intacca il char arrivato che si deve ancora leggere]

NOTA:
Quando si scrive un char, al livello HW, vengono scritti gli 1 e 0 (HIGH e LOW)
del char sulla linea seriale al bitrate dato dal baudrate